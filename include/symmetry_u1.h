#ifndef SYMMETRY_U1_H
# define SYMMETRY_U1_H

/**
 * \file symmetry_u1.h
 * \brief file for the \f$U(1)\f$ symmetry.
 *
 * The labels of the irreps are:\n
 * label = \f$N\f$
 */

/**
 * \brief Gives the maximal label + 1 of the irreps that can be generated by U1.
 *
 * \param [in] prop1 The first array of irreps.
 * \param [in] nr1 The number of irreps in prop1.
 * \param [in] prop2 The second array of irreps.
 * \param [in] nr2 The number of irreps in prop2.
 * \param [in] inc increment between irreps in prop1 and prop2.
 * \return returns the maximal label of the irreps that can be generated.
 */
int U1_get_max_irrep( int *prop1, int nr1, int *prop2, int nr2, int inc );

/**
 * \brief Gives the resulting irreps from tensor product of two other irreps of U1.
 *
 * \param [out] prod_irreps Resulting array of irreps. Will be allocated, should be freed.
 * \param [out] nr_irreps Number of resulting irreps.
 * \param [in] irrep1 The first irrep of the tensorproduct.
 * \param [in] irrep2 The second irrep of the tensorproduct.
 * \param [in] sign -1 if the inverse of irrep2 should be taken, +1 otherwise.
 */
void U1_tensprod_irrep( int **prod_irreps, int *nr_irreps, int irrep1, int irrep2, int sign );
#endif
